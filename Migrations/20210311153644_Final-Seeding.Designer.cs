// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Net_RPG.Data;

namespace Net_RPG.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210311153644_Final-Seeding")]
    partial class FinalSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Net_RPG.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 10,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 1,
                            Defeats = 0,
                            Defense = 15,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 25,
                            Name = "Gandalf",
                            Strength = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 3,
                            Class = 2,
                            Defeats = 0,
                            Defense = 1,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 50,
                            Name = "Sauron",
                            Strength = 100,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("Net_RPG.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 2,
                            SkillsId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillsId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillsId = 3
                        },
                        new
                        {
                            CharacterId = 3,
                            SkillsId = 1
                        });
                });

            modelBuilder.Entity("Net_RPG.Models.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 10,
                            Name = "Fiberall"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 25,
                            Name = "Thunderbolt"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("Net_RPG.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 35, 30, 80, 90, 17, 168, 1, 158, 172, 196, 238, 92, 149, 12, 3, 185, 123, 187, 111, 125, 17, 186, 215, 4, 65, 92, 119, 1, 137, 0, 57, 163, 140, 101, 149, 194, 88, 15, 28, 254, 24, 211, 115, 92, 112, 140, 249, 255, 180, 138, 104, 29, 245, 120, 174, 182, 243, 8, 52, 81, 21, 8, 77, 35 },
                            PasswordSalt = new byte[] { 130, 231, 205, 173, 69, 116, 182, 182, 155, 105, 11, 203, 222, 250, 246, 71, 55, 124, 105, 107, 243, 165, 95, 133, 153, 165, 138, 40, 121, 59, 59, 201, 245, 140, 154, 233, 193, 175, 90, 10, 53, 18, 245, 94, 231, 241, 41, 141, 244, 39, 203, 195, 153, 134, 131, 192, 69, 178, 174, 137, 117, 241, 1, 9, 97, 222, 169, 12, 228, 192, 194, 252, 140, 225, 162, 84, 200, 3, 243, 130, 30, 190, 8, 203, 30, 242, 118, 42, 158, 57, 115, 23, 207, 117, 85, 181, 179, 5, 106, 249, 172, 99, 183, 170, 193, 102, 200, 130, 78, 109, 113, 105, 156, 44, 32, 114, 97, 19, 5, 203, 8, 178, 215, 89, 120, 33, 158, 46 },
                            UserName = "sebasakd86"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 35, 30, 80, 90, 17, 168, 1, 158, 172, 196, 238, 92, 149, 12, 3, 185, 123, 187, 111, 125, 17, 186, 215, 4, 65, 92, 119, 1, 137, 0, 57, 163, 140, 101, 149, 194, 88, 15, 28, 254, 24, 211, 115, 92, 112, 140, 249, 255, 180, 138, 104, 29, 245, 120, 174, 182, 243, 8, 52, 81, 21, 8, 77, 35 },
                            PasswordSalt = new byte[] { 130, 231, 205, 173, 69, 116, 182, 182, 155, 105, 11, 203, 222, 250, 246, 71, 55, 124, 105, 107, 243, 165, 95, 133, 153, 165, 138, 40, 121, 59, 59, 201, 245, 140, 154, 233, 193, 175, 90, 10, 53, 18, 245, 94, 231, 241, 41, 141, 244, 39, 203, 195, 153, 134, 131, 192, 69, 178, 174, 137, 117, 241, 1, 9, 97, 222, 169, 12, 228, 192, 194, 252, 140, 225, 162, 84, 200, 3, 243, 130, 30, 190, 8, 203, 30, 242, 118, 42, 158, 57, 115, 23, 207, 117, 85, 181, 179, 5, 106, 249, 172, 99, 183, 170, 193, 102, 200, 130, 78, 109, 113, 105, 156, 44, 32, 114, 97, 19, 5, 203, 8, 178, 215, 89, 120, 33, 158, 46 },
                            UserName = "pablo"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = new byte[] { 35, 30, 80, 90, 17, 168, 1, 158, 172, 196, 238, 92, 149, 12, 3, 185, 123, 187, 111, 125, 17, 186, 215, 4, 65, 92, 119, 1, 137, 0, 57, 163, 140, 101, 149, 194, 88, 15, 28, 254, 24, 211, 115, 92, 112, 140, 249, 255, 180, 138, 104, 29, 245, 120, 174, 182, 243, 8, 52, 81, 21, 8, 77, 35 },
                            PasswordSalt = new byte[] { 130, 231, 205, 173, 69, 116, 182, 182, 155, 105, 11, 203, 222, 250, 246, 71, 55, 124, 105, 107, 243, 165, 95, 133, 153, 165, 138, 40, 121, 59, 59, 201, 245, 140, 154, 233, 193, 175, 90, 10, 53, 18, 245, 94, 231, 241, 41, 141, 244, 39, 203, 195, 153, 134, 131, 192, 69, 178, 174, 137, 117, 241, 1, 9, 97, 222, 169, 12, 228, 192, 194, 252, 140, 225, 162, 84, 200, 3, 243, 130, 30, 190, 8, 203, 30, 242, 118, 42, 158, 57, 115, 23, 207, 117, 85, 181, 179, 5, 106, 249, 172, 99, 183, 170, 193, 102, 200, 130, 78, 109, 113, 105, 156, 44, 32, 114, 97, 19, 5, 203, 8, 178, 215, 89, 120, 33, 158, 46 },
                            Role = "Admin",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Net_RPG.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 50,
                            Name = "The One Ring"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 3,
                            Damage = 50,
                            Name = "Nazgul"
                        });
                });

            modelBuilder.Entity("Net_RPG.Models.Character", b =>
                {
                    b.HasOne("Net_RPG.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Net_RPG.Models.CharacterSkill", b =>
                {
                    b.HasOne("Net_RPG.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Net_RPG.Models.Skills", "Skills")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("Net_RPG.Models.Weapon", b =>
                {
                    b.HasOne("Net_RPG.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("Net_RPG.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Net_RPG.Models.Character", b =>
                {
                    b.Navigation("CharacterSkills");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("Net_RPG.Models.Skills", b =>
                {
                    b.Navigation("CharacterSkills");
                });

            modelBuilder.Entity("Net_RPG.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
